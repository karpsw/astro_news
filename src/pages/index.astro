---
// must be at top
import List from '@/layouts/List.astro';
import { getPageMetadata } from '@/utils/metadata';


import Layout from "../layouts/MyBase.astro";

import { mainPageQuery  } from "../libs/wpapi";
import NewsCardOne from "../components/news/NewsCardOne.astro";
import {getImageUrl, getAbsoluteSiteUrl} from "../libs/utils";
import {Image} from "astro:assets";
import Link from "../components/Link.astro";
import {Icon} from "astro-icon/components";
import Centered from "../layouts/Centered.astro";

export const prerender = false;
export const output = "server";

const dataResult = await mainPageQuery();

let usedIds: number[] = [];
---

<Centered  metadata >
    <article class="my-prose">

        {dataResult.main_top_news.map(post => {
            usedIds.push(post.id);
            return (
                    <>
                    <Link href={getAbsoluteSiteUrl(post.urlPath)}  set:html={post.title}/>
                    {
                        post?.featuredImage?.srcPath && (
                                <div class="md:shrink-0 mb-1 pb-1 border-b-2">
                                    <a  href={getAbsoluteSiteUrl(post.urlPath)} >
                                        <Image src={getImageUrl(post.featuredImage.srcPath, 400, 230)} width={400} height={230} loading="lazy"  alt="" />
                                    </a>


                                </div>
                        )
                    }

                </>
            )
        })}

        {dataResult.top_news_lenta.filter((p)=>usedIds.indexOf(p.id) == -1 ).slice(0,4).map(post => {
            usedIds.push(post.id);
            return (
                    <div class="mb-1 pb-1 border-b-2">
                        <Link href={getAbsoluteSiteUrl(post.urlPath)} variant="link-heading" set:html={post.title} loading="lazy"/>
                    </div>
            )
        })}


        {dataResult.top_news_lenta.filter((p)=> p?.featuredImage?.srcPath && usedIds.indexOf(p.id) == -1 ).slice(0,3).map(post => {
            usedIds.push(post.id);
            return (
                    <NewsCardOne post={post}/>
            )
        })}


        <div class="col-md-3 mb-3">
            <div class="table-responsive pb-1">
                <table class="table table-sm mb-0 mt-2"><tbody><tr><th colspan="2" style="border-top: 0px">16.09.2024</th><th class="text-center" style="border-top: 0px">Нацбанк </th></tr><tr><td class="danger-color-dark">USD</td><td class="small text-muted">1 Доллар США</td><td class="text-center">3.1852<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr><tr><td class="danger-color-dark">EUR</td><td class="small text-muted">1 Евро</td><td class="text-center">3.5328<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr><tr><td class="danger-color-dark">RUB</td><td class="small text-muted">100 Российских рублей</td><td class="text-center">3.51<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr><tr><td class="danger-color-dark">CNY</td><td class="small text-muted">10 Китайских юаней</td><td class="text-center">4.5269<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr><tr><td class="danger-color-dark">UAH</td><td class="small text-muted">100 Гривен</td><td class="text-center">7.7569<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr><tr><td class="danger-color-dark">PLN</td><td class="small text-muted">10 Злотых</td><td class="text-center">8.2296<span class="text-muted small ml-1">BYN</span></td></tr><tr></tr></tbody></table>
            </div> </div>

        <div class="mb-1 pb-1 border-b-2">
            <span class="badge bg-danger-color-dark color-white mr-1">Популярные темы:</span>
        {dataResult.pupular_tags.map(tag => {

            return (

                <Link class="badge badge-light mr-1 " href={getAbsoluteSiteUrl(tag.urlPath)}   set:html={"#"+tag.name}/>

            )
        })}
        </div>

        {dataResult.all_news_list.filter((p)=>  usedIds.indexOf(p.id) == -1 ).map(post => {
            usedIds.push(post.id);
            return (
                    <NewsCardOne post={post}/>
            )
        })}


    </article>
</Centered>


<style>
    .bg-danger-color-dark {
        background: #c00 !important;
        color: #fff !important;
    }

    .badge-light {
        color: #212529;
        background-color: #f8f9fa;
    }

    .badge {
        display: inline-block;
        padding: .25em .4em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25rem;
        transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

</style>

<style is:global>

</style>

<script>

</script>
