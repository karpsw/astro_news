---
import {DEFAULT_METADATA} from "../constants/metadata";


import MainLayout from "../layouts/MainLayout.astro";
import Archive from "../components/templates/Archive.astro";
import Single from "../components/templates/Single.astro";
import { getNodeByURI, getAllUris } from "../libs/wpapi";
import MyBase from "../layouts/MyBase.astro";
import {Metadata} from "../types/common";
import { DEFAULT_METADATA, PAGE_METADATA, titleSeparator } from '@/constants/metadata';
const uri = `/${Astro.params.uri}/`;
export const prerender = false;
export const output = "server";

if(!uri || uri == '/undefined/'){
        const headers = {"Content-Type": "text/html"};
        return new Response(
            `<html>
        <head>
        </head>
        <body>
          <p>url incorrect -> '{Astro.params.uri}'</p>
        </body>
      </html>`,
            { headers, status: 404 },
        );
}
console.log("getNodeByURI ->>>> "+ uri)
const data = await getNodeByURI(uri);
const node = data.nodeByUri;
const props = Astro.props;



if(!node?.__typename){
        console.log("node?.__typename ->>>> "+ node?.__typename)

        return new Response("Not found", { status: 404 });
}

export async function getStaticPaths(){
    return await getAllUris();
}

function resolveContentTemplate(node){
    let template;
console.log("node?.__typename ->>>> "+ node?.__typename)
    switch(node.__typename){
        case 'Post':
            template = Single;
            break;
        case 'Page':
            template = Single;
            break;
        case 'Category':
            template = Archive;
            break;
        case 'Tag':
            template = Archive;
            break;
        default:
            template = Single;
    }

    return template;
}



const Template = resolveContentTemplate(node)

function resolveMetadata(node): Metadata {
    const { title: defaultTitle, defaultDescription, defaultImage } = DEFAULT_METADATA;
        let metadata: Metadata = {
                title: defaultTitle,
                description: defaultDescription,
                image: defaultImage
        };

    switch (node.__typename) {
        case 'Post':
               metadata.title = node.title;

            break;
        case 'Page':

            break;
        case 'Category':
                metadata.title = node.name;
            break;
        case 'Tag':
                metadata.title = node.name;
            break;
        default:

    }
    return metadata;
}




const metadata: Metadata = resolveMetadata(node);


---

<MainLayout  {metadata} >
        <article class="my-prose">
                <Template node={node}></Template>
        </article>
</MainLayout>
