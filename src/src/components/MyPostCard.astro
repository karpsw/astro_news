---
import {cn} from "../utils/styles";
import {IMAGE_SIZES} from "../constants/image";
import {TRANSITION_ELEMENT_IDS} from "../constants/transitions";
import {ROUTES} from "../constants/routes";
import {formatDate, formatDateIso} from "../utils/datetime";
import {DRAFT_TEXT} from "../constants/data";
import Link from "./Link.astro";
import {Image} from "astro:assets";
import TagList from "./TagList.astro";
import {Icon} from "astro-icon/components";
const { post } = Astro.props;
import { setTransitionSlug, TRANSITION_ELEMENT_IDS } from '@/constants/transitions';
import Tag from "./Tag.astro";

const getTransitionNameFromElementId = setTransitionSlug({ pageSlug: post.uri });

console.log("POST: " + post?.featuredImage?.node?.mediaItemUrl);

---



<article
        class={cn(
            'flex flex-col md:flex-row gap-4 lg:gap-6',
            'not-first:pt-4 not-last:pb-4 md:not-first:pt-6 md:not-last:pb-6',
            'not-last:border-b border-base-300'
        )}
>
    {/* left column */}
    {
        post?.featuredImage?.node?.sourceUrl && (
                    <div class="md:basis-1/3 md:shrink-0">
                        <Image
                            {...IMAGE_SIZES.RESPONSIVE.POST_CARD}
                            src={post?.featuredImage?.node?.sourceUrl}
                            alt=""
                            width={298} height={168}
                            srcset={post?.featuredImage?.node?.srcSet}
                            itemprop="image"
                            loading='lazy'
                            class="w-full h-[168px] xs:h-[250px] md:h-[168px] md:max-w-[298px] object-cover rounded-box"
                            transition:name={getTransitionNameFromElementId({
                                elementId: TRANSITION_ELEMENT_IDS.POST_CARD.HERO_IMAGE,
                            })}
                        />
                    </div>
        )
    }

    {/* right column */}
    <div class={cn('flex flex-col', { 'md:basis-2/3': post?.featuredImage?.node?.mediaItemUrl })}>
        {/* category and publishDate row*/}
        <div
                class="flex items-start justify-between mb-4 text-sm leading-none"
                transition:name={getTransitionNameFromElementId({
                    elementId: TRANSITION_ELEMENT_IDS.POST_CARD.META,
                })}
        >


            {post.categories.nodes.map(category => (
                    <Link
                            href={category.uri}
                            class="inline-flex items-center gap-2 bg-primary-base-200 font-medium px-2 py-0.5 rounded-button"
                    >

                        <span class="pb-0.5">
                          {category.name}
                        </span>
                    </Link>
            ))}


            <span class="inline-flex items-center gap-2 text-captions">
        <Icon name={ 'mdi:edit-outline' } class="w-4 h-4" />
        <time itemprop="datePublished" datetime={post.date}>
          {new Date(post.date).toLocaleDateString()}
        </time>
      </span>
        </div>

        {/* title */}
        <h2
                class="text-2xl font-bold break-words md:line-clamp-2 mt-0 mb-2"
                transition:name={getTransitionNameFromElementId({
                    elementId: TRANSITION_ELEMENT_IDS.POST_CARD.TITLE,
                })}
        >
            <Link href={post.uri} variant="link-heading">
                {post.title}

            </Link>
        </h2>

        {
            post.excerpt && (
                        <p
                                class="text-base mb-4 line-clamp-2"
                                transition:name={getTransitionNameFromElementId({
                                    elementId: TRANSITION_ELEMENT_IDS.POST_CARD.DESCRIPTION,
                                })}
                        >
                            {post.excerpt?.replace("<p>", "")}
                        </p>
            )
        }

        {/* reading time and read more link */}
        <div class="flex items-center xs:items-end justify-between">



        </div>
    </div>
</article>